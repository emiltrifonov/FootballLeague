// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace FootballLeague.Models
{
    public partial class EFLDBContext : DbContext
    {
        public EFLDBContext()
        {
        }

        public EFLDBContext(DbContextOptions<EFLDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Goal> Goals { get; set; }
        public virtual DbSet<Match> Matches { get; set; }
        public virtual DbSet<Player> Players { get; set; }
        public virtual DbSet<PlayerPosition> PlayerPositions { get; set; }
        public virtual DbSet<Referee> Referees { get; set; }
        public virtual DbSet<RefereePosition> RefereePositions { get; set; }
        public virtual DbSet<Team> Teams { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=.;Initial Catalog=EFLDB;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Goal>(entity =>
            {
                entity.HasKey(e => e.goal_id)
                    .HasName("PK__Goals__76679A24136E3F61");

                entity.Property(e => e.goal_id).ValueGeneratedNever();

                entity.HasOne(d => d.match)
                    .WithMany(p => p.Goals)
                    .HasForeignKey(d => d.match_id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Goals__match_id__267ABA7A");
            });

            modelBuilder.Entity<Match>(entity =>
            {
                entity.HasKey(e => e.match_id)
                    .HasName("PK__Matches__9D7FCBA39A84DF7F");

                entity.Property(e => e.match_id).ValueGeneratedNever();

                entity.HasOne(d => d.main_refereeNavigation)
                    .WithMany(p => p.Matches)
                    .HasForeignKey(d => d.main_referee)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Matches__main_re__32E0915F");

                entity.HasOne(d => d.team_1Navigation)
                    .WithMany(p => p.Matchteam_1Navigations)
                    .HasForeignKey(d => d.team_1)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Matches__team_1__30F848ED");

                entity.HasOne(d => d.team_2Navigation)
                    .WithMany(p => p.Matchteam_2Navigations)
                    .HasForeignKey(d => d.team_2)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Matches__team_2__31EC6D26");
            });

            modelBuilder.Entity<Player>(entity =>
            {
                entity.HasKey(e => e.player_id)
                    .HasName("PK__Players__44DA120CE7E59BBF");

                entity.Property(e => e.player_id).ValueGeneratedNever();

                entity.HasOne(d => d.positionNavigation)
                    .WithMany(p => p.Players)
                    .HasForeignKey(d => d.position)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Players__positio__34C8D9D1");

                entity.HasOne(d => d.teamNavigation)
                    .WithMany(p => p.Players)
                    .HasForeignKey(d => d.team)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Players__team__33D4B598");
            });

            modelBuilder.Entity<PlayerPosition>(entity =>
            {
                entity.HasKey(e => e.position_id)
                    .HasName("PK__PlayerPo__99A0E7A4EBFC093A");

                entity.Property(e => e.position_id).ValueGeneratedNever();
            });

            modelBuilder.Entity<Referee>(entity =>
            {
                entity.HasKey(e => e.referee_id)
                    .HasName("PK__Referees__28102F7AAB068D9D");

                entity.Property(e => e.referee_id).ValueGeneratedNever();
            });

            modelBuilder.Entity<RefereePosition>(entity =>
            {
                entity.HasKey(e => e.position_id)
                    .HasName("PK__RefereeP__99A0E7A44377EA44");

                entity.Property(e => e.position_id).ValueGeneratedNever();
            });

            modelBuilder.Entity<Team>(entity =>
            {
                entity.HasKey(e => e.team_id)
                    .HasName("PK__Teams__F82DEDBC4A675B5A");

                entity.Property(e => e.team_id).ValueGeneratedNever();
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}